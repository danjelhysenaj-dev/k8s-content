apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
spec:
  selector:
    matchLabels:
      app: mongo
  serviceName: "mongo"
  replicas: 2
  template:
    metadata:
      labels:
        app: mongo
    spec:
      restartPolicy: Always
      containers:
      - name: mongo
        image: mongo:4.0.0
        startupProbe:
          exec:
            command:
              - mongo
              - --eval
              - "db.adminCommand('ping')"
          initialDelaySeconds: 1
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 2
        livenessProbe:
          exec:
            command:
              - mongo
              - --eval
              - "db.adminCommand('ping')"
          initialDelaySeconds: 1
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 2
        readinessProbe:
          exec:
            command:
              - mongo
              - --eval
              - "db.adminCommand('ping')"
          initialDelaySeconds: 1
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 2
        env:
          - name: MONGO_INITDB_ROOT_USERNMAE
            value: "admin"
          - name: MONGO_INITDB_ROOT_PASSWORD
            value: "password"
        command:
          - mongod
          - "--bind_ip_all"
          - --config=/etc/mongo/mongo.conf
        volumeMounts:
        - name: mongo-volume
          mountPath: /date/db
        - name: mongodb-config
          mountPath: /etc/mongo
      volumes: 
        - name: mongodb-config
          configMap:
            name: mongodb-config
            items:
              - key: mongodb.conf
                path: mongodb.confsss
  volumeClaimTemplates:
  - metadata:
      name: mongo-volume
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: demo-storage
      resources:
        requests:
          storage: 1Gi
